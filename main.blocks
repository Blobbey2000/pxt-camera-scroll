<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="(}~OEXT^kFJ}CeXo*f4P" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="Z`@Rd.,slezzZ;iBjUbh" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace scene {" line1="" line2="    let canCameraScroll = 0" line3="    let horizontalSpeed = 0" line4="    let verticalSpeed = 0" line5="" line6="    /**" line7="    * Stops camera scroll." line8="    */" line9="    //% block" line10="    //% group=&quot;Camera&quot;" line11="    export function stopCameraScroll() {" line12="        canCameraScroll = 0" line13="    }" line14="" line15="    /**" line16="    * Starts a camera scroll." line17="    */" line18="    //% block=&quot;scroll camera with vx $horizontally and vy $vertically&quot;" line19="    //% group=&quot;Camera&quot;" line20="    export function cameraScrollDiagonally(horizontally: number, vertically: number) {" line21="        canCameraScroll = 1" line22="        horizontalSpeed = horizontally" line23="        verticalSpeed = vertically" line24="    }" line25="" line26="    game.onUpdateInterval(10, function () {" line27="        if (scene.cameraProperty(CameraProperty.X) != 0 &amp;&amp; scene.cameraProperty(CameraProperty.Y) != 0) {" line28="            if (canCameraScroll == 1) {" line29="                scene.centerCameraAt(scene.cameraProperty(CameraProperty.X) + horizontalSpeed, scene.cameraProperty(CameraProperty.Y) + verticalSpeed)" line30="            }" line31="        }" line32="    })" line33="" line34="}" numlines="35"></mutation></block></statement></block></xml>